name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build Docker image
      env:
        DOCKER_BUILDKIT: 1
      run: |
        echo "${{ secrets.ENV }}" | base64 --decode > .env
        echo "${{ secrets.CREDENTIALS_JSON }}" | base64 --decode > credentials.json
        docker build --secret id=ENV,src=.env --secret id=CREDENTIALS_JSON,src=credentials.json --tag charlesmuchogo/research:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push charlesmuchogo/research:latest
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled

    - name: SSH Into the server
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.HOST_NAME }}
        
      run: |
        echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${HOSTNAME} 'sudo docker stop $(docker ps -q --filter ancestor=charlesmuchogo/research:latest) && sudo docker pull charlesmuchogo/research:latest && sudo docker run --rm -p 9000:9000 -v myvolume:/app/images -d charlesmuchogo/research:latest && sudo systemctl restart nginx'

    # Slack Notification
    - name: Slack Notification
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
      if: always()
